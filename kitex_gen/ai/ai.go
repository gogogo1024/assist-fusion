// Code generated by thriftgo (0.4.2). DO NOT EDIT.

package ai

import (
	"context"
	"fmt"
	"github.com/gogogo1024/assist-fusion/kitex_gen/common"
)

type AIService interface {
	Embeddings(ctx context.Context, req *common.EmbeddingRequest) (r *common.EmbeddingResponse, err error)
}

type AIServiceEmbeddingsArgs struct {
	Req *common.EmbeddingRequest `thrift:"req,1" frugal:"1,default,common.EmbeddingRequest" json:"req"`
}

func NewAIServiceEmbeddingsArgs() *AIServiceEmbeddingsArgs {
	return &AIServiceEmbeddingsArgs{}
}

func (p *AIServiceEmbeddingsArgs) InitDefault() {
}

var AIServiceEmbeddingsArgs_Req_DEFAULT *common.EmbeddingRequest

func (p *AIServiceEmbeddingsArgs) GetReq() (v *common.EmbeddingRequest) {
	if !p.IsSetReq() {
		return AIServiceEmbeddingsArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AIServiceEmbeddingsArgs) SetReq(val *common.EmbeddingRequest) {
	p.Req = val
}

func (p *AIServiceEmbeddingsArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AIServiceEmbeddingsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AIServiceEmbeddingsArgs(%+v)", *p)
}

var fieldIDToName_AIServiceEmbeddingsArgs = map[int16]string{
	1: "req",
}

type AIServiceEmbeddingsResult struct {
	Success *common.EmbeddingResponse `thrift:"success,0,optional" frugal:"0,optional,common.EmbeddingResponse" json:"success,omitempty"`
	Err     *common.ServiceError      `thrift:"err,1,optional" frugal:"1,optional,common.ServiceError" json:"err,omitempty"`
}

func NewAIServiceEmbeddingsResult() *AIServiceEmbeddingsResult {
	return &AIServiceEmbeddingsResult{}
}

func (p *AIServiceEmbeddingsResult) InitDefault() {
}

var AIServiceEmbeddingsResult_Success_DEFAULT *common.EmbeddingResponse

func (p *AIServiceEmbeddingsResult) GetSuccess() (v *common.EmbeddingResponse) {
	if !p.IsSetSuccess() {
		return AIServiceEmbeddingsResult_Success_DEFAULT
	}
	return p.Success
}

var AIServiceEmbeddingsResult_Err_DEFAULT *common.ServiceError

func (p *AIServiceEmbeddingsResult) GetErr() (v *common.ServiceError) {
	if !p.IsSetErr() {
		return AIServiceEmbeddingsResult_Err_DEFAULT
	}
	return p.Err
}
func (p *AIServiceEmbeddingsResult) SetSuccess(x interface{}) {
	p.Success = x.(*common.EmbeddingResponse)
}
func (p *AIServiceEmbeddingsResult) SetErr(val *common.ServiceError) {
	p.Err = val
}

func (p *AIServiceEmbeddingsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AIServiceEmbeddingsResult) IsSetErr() bool {
	return p.Err != nil
}

func (p *AIServiceEmbeddingsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AIServiceEmbeddingsResult(%+v)", *p)
}

var fieldIDToName_AIServiceEmbeddingsResult = map[int16]string{
	0: "success",
	1: "err",
}

// exceptions of methods in AIService.
var (
	_ error = (*common.ServiceError)(nil)
)
